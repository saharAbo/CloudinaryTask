{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.storage = exports.MemoryStorageProxy = exports.LocalStorageProxy = exports.localStorageAvailable = void 0;\n\nvar is_browser_1 = require(\"./is-browser\");\n/**\n * Test if localStorage API is available\n * From https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n * @returns {boolean}\n */\n\n\nfunction localStorageAvailable() {\n  try {\n    var x = '@rehooks/local-storage:' + new Date().toISOString();\n    localStorage.setItem(x, x);\n    localStorage.removeItem(x);\n    return true;\n  } catch (e) {\n    return is_browser_1.isBrowser() && e instanceof DOMException && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' || // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') && // acknowledge QuotaExceededError only if there's something already stored\n    localStorage && localStorage.length !== 0;\n  }\n}\n\nexports.localStorageAvailable = localStorageAvailable;\n\nvar LocalStorageProxy =\n/** @class */\nfunction () {\n  function LocalStorageProxy() {}\n\n  LocalStorageProxy.prototype.getItem = function (key) {\n    return localStorage.getItem(key);\n  };\n\n  LocalStorageProxy.prototype.setItem = function (key, value) {\n    localStorage.setItem(key, value);\n  };\n\n  LocalStorageProxy.prototype.removeItem = function (key) {\n    localStorage.removeItem(key);\n  };\n\n  return LocalStorageProxy;\n}();\n\nexports.LocalStorageProxy = LocalStorageProxy;\n\nvar MemoryStorageProxy =\n/** @class */\nfunction () {\n  function MemoryStorageProxy() {\n    this._memoryStorage = new Map();\n  }\n\n  MemoryStorageProxy.prototype.getItem = function (key) {\n    var _a;\n\n    return (_a = this._memoryStorage.get(key)) !== null && _a !== void 0 ? _a : null;\n  };\n\n  MemoryStorageProxy.prototype.setItem = function (key, value) {\n    this._memoryStorage.set(key, value);\n  };\n\n  MemoryStorageProxy.prototype.removeItem = function (key) {\n    this._memoryStorage.delete(key);\n  };\n\n  return MemoryStorageProxy;\n}();\n\nexports.MemoryStorageProxy = MemoryStorageProxy;\n\nvar proxyStorageFrom = function (isAvailable) {\n  return isAvailable ? new LocalStorageProxy() : new MemoryStorageProxy();\n};\n\nexports.storage = proxyStorageFrom(localStorageAvailable());","map":{"version":3,"mappings":";;;;;;;AAAA;AAEA;;;;;;;AAKA,SAAgBA,qBAAhB,GAAqC;EACnC,IAAI;IACF,IAAIC,CAAC,GAAG,4BAA4B,IAAIC,IAAJ,GAAWC,WAAX,EAApC;IACAC,YAAY,CAACC,OAAb,CAAqBJ,CAArB,EAAwBA,CAAxB;IACAG,YAAY,CAACE,UAAb,CAAwBL,CAAxB;IACA,OAAO,IAAP;EACD,CALD,CAMA,OAAMM,CAAN,EAAS;IACP,OAAOC,4BAAeD,CAAC,YAAYE,YAA5B,MACL;IACAF,CAAC,CAACG,IAAF,KAAW,EAAX,IACA;IACAH,CAAC,CAACG,IAAF,KAAW,IAFX,IAGA;IACA;IACAH,CAAC,CAACI,IAAF,KAAW,oBALX,IAMA;IACAJ,CAAC,CAACI,IAAF,KAAW,4BATN,KAUL;IACCP,YAAY,IAAIA,YAAY,CAACQ,MAAb,KAAwB,CAX3C;EAYD;AACF;;AArBDC;;AA8BA;AAAA;AAAA;EAAA,8BAYC;;EAXCC,gDAAQC,GAAR,EAAmB;IACjB,OAAOX,YAAY,CAACY,OAAb,CAAqBD,GAArB,CAAP;EACD,CAFD;;EAIAD,gDAAQC,GAAR,EAAqBE,KAArB,EAAkC;IAChCb,YAAY,CAACC,OAAb,CAAqBU,GAArB,EAA0BE,KAA1B;EACD,CAFD;;EAIAH,mDAAWC,GAAX,EAAsB;IACpBX,YAAY,CAACE,UAAb,CAAwBS,GAAxB;EACD,CAFD;;EAGF;AAAC,CAZD;;AAAaF;;AAcb;AAAA;AAAA;EAAA;IACU,sBAAiB,IAAIK,GAAJ,EAAjB;EAaT;;EAXCC,iDAAQJ,GAAR,EAAmB;;;IACjB,aAAO,KAAKK,cAAL,CAAoBC,GAApB,CAAwBN,GAAxB,CAAP,MAAmC,IAAnC,IAAmCO,aAAnC,GAAmCA,EAAnC,GAAuC,IAAvC;EACD,CAFD;;EAIAH,iDAAQJ,GAAR,EAAqBE,KAArB,EAAkC;IAChC,KAAKG,cAAL,CAAoBG,GAApB,CAAwBR,GAAxB,EAA6BE,KAA7B;EACD,CAFD;;EAIAE,oDAAWJ,GAAX,EAAsB;IACpB,KAAKK,cAAL,CAAoBI,MAApB,CAA2BT,GAA3B;EACD,CAFD;;EAGF;AAAC,CAdD;;AAAaF;;AAgBb,IAAMY,gBAAgB,GAAG,UAACC,WAAD,EAAqB;EAAK,kBAAW,GAC1D,IAAIZ,iBAAJ,EAD0D,GAE1D,IAAIK,kBAAJ,EAF+C;AAEvB,CAF5B;;AAIaN,kBAAUY,gBAAgB,CAACzB,qBAAqB,EAAtB,CAA1B","names":["localStorageAvailable","x","Date","toISOString","localStorage","setItem","removeItem","e","is_browser_1","DOMException","code","name","length","exports","LocalStorageProxy","key","getItem","value","Map","MemoryStorageProxy","_memoryStorage","get","_a","set","delete","proxyStorageFrom","isAvailable"],"sources":["C:\\Users\\AA\\Desktop\\NewOne\\node_modules\\@rehooks\\local-storage\\src\\storage.ts"],"sourcesContent":["import { isBrowser } from './is-browser'\n\n/**\n * Test if localStorage API is available\n * From https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n * @returns {boolean}\n */\nexport function localStorageAvailable(): boolean {\n  try {\n    var x = '@rehooks/local-storage:' + new Date().toISOString();\n    localStorage.setItem(x, x);\n    localStorage.removeItem(x);\n    return true;\n  }\n  catch(e) {\n    return isBrowser() && e instanceof DOMException && (\n      // everything except Firefox\n      e.code === 22 ||\n      // Firefox\n      e.code === 1014 ||\n      // test name field too, because code might not be present\n      // everything except Firefox\n      e.name === 'QuotaExceededError' ||\n      // Firefox\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      (localStorage && localStorage.length !== 0);\n  }\n}\n\n\ninterface IProxyStorage {\n  getItem(key: string): string | null\n  setItem(Key: string, value: string): void\n  removeItem(key: string): void\n}\n\nexport class LocalStorageProxy implements IProxyStorage {\n  getItem(key: string): string | null {\n    return localStorage.getItem(key)\n  }\n\n  setItem(key: string, value: string): void {\n    localStorage.setItem(key, value)\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(key)\n  }\n}\n\nexport class MemoryStorageProxy implements IProxyStorage {\n  private _memoryStorage = new Map<string, string>()\n\n  getItem(key: string): string | null {\n    return this._memoryStorage.get(key) ?? null\n  }\n\n  setItem(key: string, value: string): void {\n    this._memoryStorage.set(key, value)\n  }\n\n  removeItem(key: string): void {\n    this._memoryStorage.delete(key)\n  }\n}\n\nconst proxyStorageFrom = (isAvailable: boolean) => isAvailable\n  ? new LocalStorageProxy()\n  : new MemoryStorageProxy()\n\nexport const storage = proxyStorageFrom(localStorageAvailable())\n"]},"metadata":{},"sourceType":"script"}
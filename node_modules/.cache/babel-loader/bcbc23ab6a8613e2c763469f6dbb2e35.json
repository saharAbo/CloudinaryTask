{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AA\\\\Desktop\\\\NewOne\\\\src\\\\components\\\\TaggedImage.jsx\";\nimport { Avatar, Divider, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@mui/material\";\nimport useLocalStorage from \"@rehooks/local-storage\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { removeTagFromImage } from \"../db/images\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaggedImage = _ref => {\n  let {\n    tagName,\n    images,\n    color\n  } = _ref;\n  const filteredImages = images.filter(image => image.selectedTags && image.selectedTags.indexOf(tagName) >= 0);\n  console.log(filteredImages);\n\n  const remove_tag = image => {\n    removeTagFromImage(image, tagName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"stretch\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        background: color,\n        paddingLeft: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: tagName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: \"100%\",\n        maxWidth: 270,\n        bgcolor: \"background.paper\"\n      },\n      children: filteredImages.map(image => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              onClick: () => remove_tag(image.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: image.author,\n              src: image.download_url,\n              variant: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: [\"By: \", image.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaggedImage;\nexport default TaggedImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaggedImage\");","map":{"version":3,"names":["Avatar","Divider","Grid","IconButton","List","ListItem","ListItemAvatar","ListItemText","Typography","useLocalStorage","DeleteIcon","removeTagFromImage","TaggedImage","tagName","images","color","filteredImages","filter","image","selectedTags","indexOf","console","log","remove_tag","background","paddingLeft","width","maxWidth","bgcolor","map","id","author","download_url"],"sources":["C:/Users/AA/Desktop/NewOne/src/components/TaggedImage.jsx"],"sourcesContent":["import {\n  Avatar,\n  Divider,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport useLocalStorage from \"@rehooks/local-storage\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { removeTagFromImage } from \"../db/images\";\n\nconst TaggedImage = ({ tagName, images, color }) => {\n  const filteredImages = images.filter(\n    (image) => image.selectedTags && image.selectedTags.indexOf(tagName) >= 0\n  );\n  console.log(filteredImages);\n\n  const remove_tag = (image) => {\n    removeTagFromImage(image, tagName);\n  };\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"space-between\"\n      alignItems=\"stretch\"\n    >\n      <Grid item style={{ background: color, paddingLeft: 10 }}>\n        <Typography variant={\"h6\"}>{tagName}</Typography>\n      </Grid>\n      <List\n        sx={{\n          width: \"100%\",\n          maxWidth: 270,\n          bgcolor: \"background.paper\",\n        }}\n      >\n        {filteredImages.map((image) => (\n          <>\n            <ListItem\n              key={image.id}\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              secondaryAction={\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <DeleteIcon onClick={() => remove_tag(image.id)} />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt={image.author}\n                  src={image.download_url}\n                  variant=\"square\"\n                />\n              </ListItemAvatar>\n              <ListItemText>By: {image.author}</ListItemText>\n            </ListItem>\n          </>\n        ))}\n      </List>\n    </Grid>\n  );\n};\n\nexport default TaggedImage;\n"],"mappings":";AAAA,SACEA,MADF,EAEEC,OAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,cAPF,EAQEC,YARF,EASEC,UATF,QAUO,eAVP;AAWA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,kBAAT,QAAmC,cAAnC;;;;AAEA,MAAMC,WAAW,GAAG,QAAgC;EAAA,IAA/B;IAAEC,OAAF;IAAWC,MAAX;IAAmBC;EAAnB,CAA+B;EAClD,MAAMC,cAAc,GAAGF,MAAM,CAACG,MAAP,CACpBC,KAAD,IAAWA,KAAK,CAACC,YAAN,IAAsBD,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BP,OAA3B,KAAuC,CADnD,CAAvB;EAGAQ,OAAO,CAACC,GAAR,CAAYN,cAAZ;;EAEA,MAAMO,UAAU,GAAIL,KAAD,IAAW;IAC5BP,kBAAkB,CAACO,KAAD,EAAQL,OAAR,CAAlB;EACD,CAFD;;EAGA,oBACE,QAAC,IAAD;IACE,SAAS,MADX;IAEE,SAAS,EAAC,QAFZ;IAGE,cAAc,EAAC,eAHjB;IAIE,UAAU,EAAC,SAJb;IAAA,wBAME,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,KAAK,EAAE;QAAEW,UAAU,EAAET,KAAd;QAAqBU,WAAW,EAAE;MAAlC,CAAlB;MAAA,uBACE,QAAC,UAAD;QAAY,OAAO,EAAE,IAArB;QAAA,UAA4BZ;MAA5B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF,eASE,QAAC,IAAD;MACE,EAAE,EAAE;QACFa,KAAK,EAAE,MADL;QAEFC,QAAQ,EAAE,GAFR;QAGFC,OAAO,EAAE;MAHP,CADN;MAAA,UAOGZ,cAAc,CAACa,GAAf,CAAoBX,KAAD,iBAClB;QAAA,uBACE,QAAC,QAAD;UAEE,UAAU,EAAC,QAFb;UAGE,cAAc,EAAC,eAHjB;UAIE,eAAe,eACb,QAAC,UAAD;YAAY,IAAI,EAAC,KAAjB;YAAuB,cAAW,QAAlC;YAAA,uBACE,QAAC,UAAD;cAAY,OAAO,EAAE,MAAMK,UAAU,CAACL,KAAK,CAACY,EAAP;YAArC;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QALJ;UAAA,wBAUE,QAAC,cAAD;YAAA,uBACE,QAAC,MAAD;cACE,GAAG,EAAEZ,KAAK,CAACa,MADb;cAEE,GAAG,EAAEb,KAAK,CAACc,YAFb;cAGE,OAAO,EAAC;YAHV;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAVF,eAiBE,QAAC,YAAD;YAAA,mBAAmBd,KAAK,CAACa,MAAzB;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBF;QAAA,GACOb,KAAK,CAACY,EADb;UAAA;UAAA;UAAA;QAAA;MADF,iBADD;IAPH;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2CD,CApDD;;KAAMlB,W;AAsDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}